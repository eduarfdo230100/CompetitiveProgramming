  
#include <bits/stdc++.h>
#define ll long long
#define fore(i,a,b) for(int i=a;i<b;i++)
#define mp make_pair
#define vll vector<ll>
#define vvll vector<vll>
#define vi vector<int>
#define vvi vector<vi>
#define fst first
#define snd second
#define sz(x) int(x.size())
#define all(x) x.begin(),x.end()
#define pb push_back
#define pii pair<int,int>
#define FIFO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define RFWF freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
using namespace std;
struct pt{
    ll x,y;
    pt operator - (const pt &p) const{
        return {x-p.x,y-p.y};
    }
    pt operator + (const pt &p) const{
        return {x+p.x,y+p.y};
    }
    
};
ll cross(const pt &a,const pt &b){
    return a.x*b.y-a.y*b.x;
}
ll area(const pt &a,const pt &b,const pt &c){
    return cross(b-a,c-a);
}
bool f(const pt &a,const pt &b){
    if(a.x==b.x) return a.y<b.y;
    return a.x<b.x;
}
void convex_hull(vector<pt> &v,vector<pt> &convex){
    sort(all(v),f);
    int n=sz(v),k=0;
    fore(i,0,n){
        while(k>=2 and area(convex[k-2],convex[k-1],v[i])<=0) k--;
        convex[k++]=v[i];
    }
    for(int i=n-2,t=k;i>=0;i--){
        while(k>t and area(convex[k-2],convex[k-1],v[i])<=0) k--;
        convex[k++]=v[i];
    }
    convex.resize(k-1);
}
int main() {
	int n;
	cin>>n;
	vector<pt> v(n),convex(2*n);
	fore(i,0,n) cin>>v[i].x>>v[i].y;
	convex_hull(v,convex);
	fore(i,0,sz(convex)){
	    cout<<convex[i].x<<" "<<convex[i].y<<endl;
	}

	return 0;
}
