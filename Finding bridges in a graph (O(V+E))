#include <bits/stdc++.h>
#define vi vector<int>
#define vvi vector<vector<int>>
#define ll long long
#define fore(i,a,b) for(int i=a;i<b;i++)
#define vll vector<ll>
#define pb push_back
using namespace std;
int n,m,timer;
vvi adj;
vi tin,low;
vector<bool> visited;
void dfs(int node,int p){
	visited[node]=true;
	tin[node]=low[node]=timer++;
	for(auto to:adj[node]){
		if(to==p) continue;
		if(visited[to]) low[node]=min(low[node],tin[to]);
		else{
			dfs(to,node);
			low[node]=min(low[node],low[to]);
			if(low[to]>tin[node]) cout<<node<<" "<<to<<endl; 
		}
	}
}
int main() {
	cin>>n>>m;
	adj.assign(n,vi());	
	visited.assign(n,false);
	tin.assign(n,-1);
	low.assign(n,-1);
	fore(i,0,m) {
		int x,y;
		cin>>x>>y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	timer=0;
	cout<<"Bridges:"<<endl;
	fore(i,0,n) if(!visited[i]) dfs(i,-1);
	
	return 0;
}
