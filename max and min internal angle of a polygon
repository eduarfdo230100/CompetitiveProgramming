#include <bits/stdc++.h>
#define ll long long
#define fore(i,a,b) for(int i=a;i<b;i++)
#define mp make_pair
#define vll vector<ll>
#define vvll vector<vll>
#define vi vector<int>
#define vvi vector<vi>
#define fst first
#define snd second
#define sz(x) int(x.size())
#define all(x) x.begin(),x.end()
#define pb push_back
#define pii pair<int,int>
#define FIFO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define RFWF freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
using namespace std;
double EPS=1e-7,pi=acos(-1);
struct pt{
    double x,y;
    pt operator - (const pt &p) const{
        return {x-p.x,y-p.y};
    }
    pt operator + (const pt &p) const{
        return {x+p.x,y+p.y};
    }
    pt operator * (const double &k) const{
        return {x*k,y*k};
    }
    bool operator != (const pt &p) const{
        if(fabs(x-p.x)<EPS and fabs(y-p.y)<EPS) return false;
        return true;
    }
};
double mod(const pt &a){
    return sqrt(a.x*a.x+a.y*a.y);
}
double cross(const pt &a,const pt &b){
    return a.x*b.y-a.y*b.x;
}
double dot(const pt &a,const pt &b){
    return a.x*b.x+a.y*b.y;
}

double area(const pt &a,const pt &b,const pt &c){
    return cross(b-a,c-a);
}

int main() {
    int n;
    while(cin>>n and n>=3){
        vector<pt> v(n);
        fore(i,0,n) cin>>v[i].x>>v[i].y;
        double derx=v[0].x;
        int pos;
        fore(i,0,n) derx=max(v[i].x,derx);
        fore(i,0,n) if(v[(i+1)%n].x==derx and v[i].x!=derx) {
            pos=i;
            break;
        }
        double giro=1;
        if(area(v[pos],v[(pos+1)%n],v[(pos+2)%n])>0) giro=-1;
        double mini=1e10,maxi=0;
        fore(i,0,n){
            double alfa=pi+giro*atan2(cross(v[(i+1)%n]-v[i],v[(i+2)%n]-v[(i+1)%n]),dot(v[(i+1)%n]-v[i],v[(i+2)%n]-v[(i+1)%n]));
            mini=min(alfa,mini);
            maxi=max(alfa,maxi);
        }
        printf("%.6lf %.6lf\n",mini*180/pi,maxi*180/pi);
    }
	return 0;
}
