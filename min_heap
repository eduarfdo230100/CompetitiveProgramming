#include <bits/stdc++.h>
using namespace std;
vector<int> minheap(1,-1);
int parent(int i){
	return (i>>1);
}
int left(int i){
	return (i<<1);
}
int right(int i){
	return (i<<1)+1;
}
void subida(int i){
	while(i!=1){
		if(minheap[parent(i)]>minheap[i]){
			swap(minheap[parent(i)],minheap[i]);
		}
		else{
			break;
		}
		(i>>=1);
	}
}
void insert(int x){
	minheap.push_back(x);
	int i=minheap.size()-1;
	subida(i);
}
void bajada(int i){
	if(minheap[left(i)]==minheap[i]){
		return;
	}
	while(minheap[i]>minheap[left(i)] or minheap[i]>minheap[right(i)]){
		int pos;
		if(minheap[left(i)]<=minheap[right(i)]){
			pos=left(i);
		}
		else{
			pos=right(i);
		}
		swap(minheap[i],minheap[pos]);
		i=pos;
		if(right(i)>=minheap.size()){
			break;
		}
	}
}
void delet(int k){
	minheap[k]=INT_MIN;
	subida(k);
	minheap[1]=minheap[minheap.size()-1];
	bajada(1);
	minheap.erase(minheap.begin()+minheap.size()-1);
}
int main() {
	int n,x;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>x;
		insert(x);
	}
	for(int i=1;i<=n;i++){
		cout<<minheap[i]<<" ";
	}
	cout<<endl;
	delet(4);
	for(int i=1;i<n;i++){
		cout<<minheap[i]<<" ";
	}
	cout<<endl<<minheap.size()-1;
	return 0;
}
