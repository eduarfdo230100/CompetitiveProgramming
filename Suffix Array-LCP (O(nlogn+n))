#include <bits/stdc++.h>
#define vi vector<int>
#define mp make_pair
#define fore(i,a,b) for(int i=a;i<b;i++)
using namespace std;
vi get_sa(string s){
	int n=s.size();
	vi p(n),c(n),cnt(max(256,n));
	fore(i,0,n) cnt[s[i]]++;
	fore(i,1,256) cnt[i]+=cnt[i-1];
	for(int i=n-1;i>=0;i--) p[--cnt[s[i]]]=i;
	int classes=1;
	fore(i,1,n){
		if(s[p[i]]!=s[p[i-1]]) classes++;
		c[p[i]]=classes-1;
	}
	vi pn(n),cn(n);
	for(int h=0;(1<<h)<n;h++){
		fill(cnt.begin(),cnt.begin()+classes,0);
		fore(i,0,n) {
			pn[i]=p[i]-(1<<h);
			if(pn[i]<0) pn[i]+=n;
		}
		fore(i,0,n) cnt[c[pn[i]]]++;
		fore(i,1,classes) cnt[i]+=cnt[i-1];
		for(int i=n-1;i>=0;i--) p[--cnt[c[pn[i]]]]=pn[i];
		classes=1;
		fore(i,1,n){
			if(mp(c[p[i]],c[(p[i]+(1<<h))%n])!=mp(c[p[i-1]],c[(p[i-1]+(1<<h))%n])) classes++;
			cn[p[i]]=classes-1;
		}
		c.swap(cn);
	}
	return p;
}
vi get_lcp(string &s,vi &sa){
	int n=s.size();
	vi pos(n),lcp(n-1);
	fore(i,0,n) pos[sa[i]]=i;
	int k=0;
	fore(i,0,n){
		if(pos[i]==n-1){
			k=0;
			continue;
		}
		int j=sa[pos[i]+1];
		while(i+k<n and j+k<n and s[i+k]==s[j+k]) k++;
		lcp[pos[i]]=k;
		if(k>0) k--;
	}
	return lcp;
}
int main() {
	string s;
	cin>>s;
	s+='$';
	int n=s.size();
	vi sa=get_sa(s),lcp;
	lcp=get_lcp(s,sa);
	sa.erase(sa.begin());
	lcp.erase(lcp.begin());
	fore(i,0,n-1) cout<<sa[i]<<" ";
	cout<<endl;
	fore(i,0,n-2) cout<<lcp[i]<<" "; 
	return 0;
}
